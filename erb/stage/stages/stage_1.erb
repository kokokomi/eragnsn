; ステージ初期化処理
@stage_initialize_1(stageId)
#DIM stageId
ステージ名:(stageId) = 始まりの秘境
ステージ定義:(stageId):最大階層 = 5

@stage_1_can_challenge
RETURN true

; 周辺探索時のイベントを呼び出す
; 何も発生しない場合はfalseを返すと何も見つからなかった時の処理が走る
; 何かしらのイベントが発生した場合はtrueを返す
@stage_explore_1
#DIM queryCount
DT_CREATE "stage_events"
DT_COLUMN_ADD "stage_events", "event_id", "int16"
DT_COLUMN_ADD "stage_events", "rarity", "int16"

DT_ROW_ADD "stage_events", "event_id", 1, "rarity", 1
DT_ROW_ADD "stage_events", "event_id", 2, "rarity", 1

LOCAL:0 = RAND:100

; 20%でイベントなし
IF LOCAL:0 < 20
    DT_RELEASE "stage_events"
    RETURN false
ENDIF
queryCount = DT_SELECT("stage_events", "rarity = 1", "event_id ASC")
LOCAL:1 = RAND:(queryCount)
CALLFORM stage_event_{DT_CELL_GET("stage_events", LOCAL:1, "event_id")}
DT_RELEASE "stage_events"

RETURN true

; 先へ進む場合呼び出される
; 探索度を加算したり、イベントを発生させる
@stage_foward_1
#DIM lcount
; 20%で戦闘なし
IF RAND:100 < 20
    ステージ探索度 += 10 + RAND:10
ENDIF

CALL battle_setup
FOR lcount, 0, (RAND:(ステージ現在フロア) / 2) + 1
    SELECTCASE RAND:3
        CASE 0, 1
            CALL battle_setup_add_enemy(1, RAND:3 + 7)
        CASE 2
            CALL battle_setup_add_enemy(2, RAND:3 + 7)
    ENDSELECT
NEXT
CALL battle
ステージ探索度 += 10+ RAND:20

@stage_clear_1(isFirstClear)
#DIM isFirstClear
IF isFirstClear
    ; ジン
    CALL charactor_add_member(2)
    ; リサ
    CALL charactor_add_member(7)

    PRINTFORML 本格的な調査のため、%CSVCALLNAME(2)%と%CSVCALLNAME(7)%が仲間に加わった！
    PRINTL
    WAIT
ENDIF